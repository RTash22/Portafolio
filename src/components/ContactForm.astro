---
---

<form id="contact-form" class="space-y-6">
  <div class="relative">
    <input
      type="text"
      id="name"
      name="name"
      required
      class="w-full px-4 py-3 rounded-lg border dark:bg-gray-700 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-purple-600 dark:focus:ring-purple-400 transition-all peer"
      placeholder=" "
    />
    <label
      for="name"
      class="absolute text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white dark:bg-gray-700 px-2 peer-focus:px-2 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 left-1"
    >
      Your Name
    </label>
    <span class="text-red-500 text-sm hidden" id="name-error"></span>
  </div>

  <div class="relative">
    <input
      type="email"
      id="email"
      name="email"
      required
      class="w-full px-4 py-3 rounded-lg border dark:bg-gray-700 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-purple-600 dark:focus:ring-purple-400 transition-all peer"
      placeholder=" "
    />
    <label
      for="email"
      class="absolute text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white dark:bg-gray-700 px-2 peer-focus:px-2 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 left-1"
    >
      Your Email
    </label>
    <span class="text-red-500 text-sm hidden" id="email-error"></span>
  </div>

  <div class="relative">
    <textarea
      id="message"
      name="message"
      required
      rows="6"
      class="w-full px-4 py-3 rounded-lg border dark:bg-gray-700 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-purple-600 dark:focus:ring-purple-400 transition-all peer"
      placeholder=" "
    ></textarea>
    <label
      for="message"
      class="absolute text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white dark:bg-gray-700 px-2 peer-focus:px-2 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-6 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 left-1"
    >
      Your Message
    </label>
    <span class="text-red-500 text-sm hidden" id="message-error"></span>
  </div>

  <button
    type="submit"
    class="w-full bg-purple-600 text-white py-3 rounded-lg font-semibold hover:bg-purple-700 transition-colors focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2 dark:focus:ring-offset-gray-900"
  >
    Send Message
  </button>

  <!-- Success message -->
  <div
    id="success-message"
    class="hidden fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transform transition-all duration-500 translate-y-full opacity-0"
  >
    Message sent successfully!
  </div>
</form>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const successMessage = document.getElementById('success-message');

  // Validation functions
  const validateName = (name: string): boolean => {
    return name.length >= 2;
  };

  const validateEmail = (email: string): boolean => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  const validateMessage = (message: string): boolean => {
    return message.length >= 10;
  };

  // Show error message
  const showError = (elementId: string, message: string) => {
    const errorElement = document.getElementById(`${elementId}-error`);
    if (errorElement) {
      errorElement.textContent = message;
      errorElement.classList.remove('hidden');
    }
  };

  // Hide error message
  const hideError = (elementId: string) => {
    const errorElement = document.getElementById(`${elementId}-error`);
    if (errorElement) {
      errorElement.classList.add('hidden');
    }
  };

  // Show success message
  const showSuccessMessage = () => {
    if (successMessage) {
      successMessage.classList.remove('hidden', 'translate-y-full', 'opacity-0');
      setTimeout(() => {
        successMessage.classList.add('translate-y-full', 'opacity-0');
        setTimeout(() => {
          successMessage.classList.add('hidden');
        }, 500);
      }, 3000);
    }
  };

  // Form submission handler
  form?.addEventListener('submit', async (e: SubmitEvent) => {
    e.preventDefault();
    let isValid = true;

    // Get form values
    const nameInput = document.getElementById('name') as HTMLInputElement;
    const emailInput = document.getElementById('email') as HTMLInputElement;
    const messageInput = document.getElementById('message') as HTMLTextAreaElement;

    // Validate name
    if (!validateName(nameInput.value)) {
      showError('name', 'Name must be at least 2 characters long');
      isValid = false;
    } else {
      hideError('name');
    }

    // Validate email
    if (!validateEmail(emailInput.value)) {
      showError('email', 'Please enter a valid email address');
      isValid = false;
    } else {
      hideError('email');
    }

    // Validate message
    if (!validateMessage(messageInput.value)) {
      showError('message', 'Message must be at least 10 characters long');
      isValid = false;
    } else {
      hideError('message');
    }

    if (isValid) {
      // Here you would typically send the form data to a server
      // For now, we'll just show a success message
      showSuccessMessage();
      form.reset();
    }
  });

  // Real-time validation
  const inputs = ['name', 'email', 'message'];
  inputs.forEach(inputId => {
    const input = document.getElementById(inputId);
    input?.addEventListener('blur', (e: Event) => {
      const target = e.target as HTMLInputElement | HTMLTextAreaElement;
      switch (inputId) {
        case 'name':
          if (!validateName(target.value)) {
            showError('name', 'Name must be at least 2 characters long');
          } else {
            hideError('name');
          }
          break;
        case 'email':
          if (!validateEmail(target.value)) {
            showError('email', 'Please enter a valid email address');
          } else {
            hideError('email');
          }
          break;
        case 'message':
          if (!validateMessage(target.value)) {
            showError('message', 'Message must be at least 10 characters long');
          } else {
            hideError('message');
          }
          break;
      }
    });
  });
</script>
